---
import { SITE } from "src/config";
import "../styles/base.css";

export interface Props {
  title?: string;
  author?: string;
  description?: string;
  ogImage?: string;
}

const {
  title = SITE.title,
  author = SITE.author,
  description = SITE.desc,
  ogImage = SITE.ogImage,
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(
  ogImage ? ogImage : SITE.ogImage,
  Astro.url.origin
);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <script is:inline>
      const primaryColorScheme = "none";
      const darkModeMediaQuery = window.matchMedia("(prefers-color-scheme: dark)").matches;
      const currentTheme = localStorage.getItem("theme");
      let theme;
      if (currentTheme) {
        theme = currentTheme === "dark" ? "theme-dark" : "";
      } 
      else {
        if (primaryColorScheme === "dark" || (primaryColorScheme === "none" && darkModeMediaQuery)) {
          theme = "theme-dark";
        }
        else if (primaryColorScheme === "light") {
          theme = "";
        }
        else {
          theme = darkModeMediaQuery ? "theme-dark" : "";
        }
      }
      document.querySelector("html").className = theme;
    </script>
  </head>
  <body>
    <slot />
  </body>
</html>